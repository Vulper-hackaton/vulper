{"remainingRequest":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\src\\views\\suitability\\Suitability.vue?vue&type=template&id=12556921&","dependencies":[{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\src\\views\\suitability\\Suitability.vue","mtime":1588433955152},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}