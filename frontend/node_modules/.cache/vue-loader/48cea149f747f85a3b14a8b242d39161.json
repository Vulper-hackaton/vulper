{"remainingRequest":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\src\\views\\BrokerDashboard.vue?vue&type=template&id=4936d9f1&","dependencies":[{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\src\\views\\BrokerDashboard.vue","mtime":1588419491884},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nicholas\\Desktop\\vulper-dev\\vulper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAiaG9tZS1jb250YWluZXIiIH0gfSwgWwogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3cganVzdGlmeS1jb250ZW50LW1kLWNlbnRlciBwLTMiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wgY29sLTIiIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCBjb2wtOCIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1tZC1jZW50ZXIgcC0zIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCIsIGF0dHJzOiB7IGlkOiAiY29sdW5hIiB9IH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3cganVzdGlmeS1jb250ZW50LW1kLWNlbnRlciBwLTMiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJwZWRpZG8xIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkIiwgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxMDAlIiB9IH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBuby1ndXR0ZXJzIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMSksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMiksCiAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC0yIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1ib2R5IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyb3cganVzdGlmeS1jb250ZW50LW1kLWNlbnRlciIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi9sb2dpbiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gcm91bmRlZCBidG4tc20iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImJ1dHRvbjEiLCB0eXBlOiAiYnV0dG9uIiB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIEFnZW5kYXIgIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1tZC1jZW50ZXIgbXQtNSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvbG9naW4iIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIHJvdW5kZWQgYnRuLXNtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJidXR0b24yIiwgdHlwZTogImJ1dHRvbiIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBleGNsdWlyICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdyBqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyIHAtMyIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInBlZGlkbzIiIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFtfdm0uX3YoImZmIildCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1tZC1jZW50ZXIgcC0zIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAicGVkaWRvMyIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiZmYiKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wgY29sLTIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBqdXN0aWZ5LWNvbnRlbnQtZW5kIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICBfdm0uX20oMyksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgYXR0cnM6IHsgaWQ6ICJjb2xsYXBzZUV4YW1wbGUiIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL2xvZ2luIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkIGNhcmQtYm9keSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIE1lbnNhZ2VtICIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvZWRpdC1icm9rZXIiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQgY2FyZC1ib2R5IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgTXVkYXIgUGVyZmlsICIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKSwKICAgIF92bS5fbSg0KQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTQiIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBzdGF0aWNDbGFzczogImNhcmQtaW1nIiwKICAgICAgICBhdHRyczogeyBzcmM6ICIiLCBhbHQ6ICJwdXhhciBkbyBCRCIgfQogICAgICB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtYm9keSIgfSwgWwogICAgICAgIF9jKCJoNSIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXRpdGxlIiB9LCBbX3ZtLl92KCJDYXJkIHRpdGxlIildKSwKICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXRleHQiIH0sIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBUaGlzIGlzIGEgd2lkZXIgY2FyZCB3aXRoIHN1cHBvcnRpbmcgdGV4dCBiZWxvdyBhcyBhIG5hdHVyYWwgbGVhZC1pbiB0byBhZGRpdGlvbmFsIGNvbnRlbnQuIFRoaXMgY29udGVudCBpcyBhIGxpdHRsZSBiaXQgbG9uZ2VyLiAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTIiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLWJvZHkiIH0sIFsKICAgICAgICBfYygiaDUiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC10aXRsZSIgfSwgW192bS5fdigiQ2FyZCB0aXRsZSIpXSksCiAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC10ZXh0IiB9LCBbX3ZtLl92KCIgT2RlciBpbmZvICIpXSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJwIiwgWwogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLXByaW1hcnkiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImRhdGEtdG9nZ2xlIjogImNvbGxhcHNlIiwKICAgICAgICAgICAgaHJlZjogIiNjb2xsYXBzZUV4YW1wbGUiLAogICAgICAgICAgICByb2xlOiAiYnV0dG9uIiwKICAgICAgICAgICAgImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiLAogICAgICAgICAgICAiYXJpYS1jb250cm9scyI6ICJjb2xsYXBzZUV4YW1wbGUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCIgU3Vic3RpdHVpciBwb3IgbWVudSAiKV0KICAgICAgKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwdC01IHBsLTUiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwbC01IiB9LCBbX3ZtLl92KCIgZm9vdGVyICIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}